services:
  postgres:
    image: postgres:15-alpine
    container_name: jiko-auth-postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5435:5432"
    networks:
      - bridge

  backend:
    build: ./backend
    container_name: jiko-auth-backend
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
      - JWT_SECRET=${JWT_SECRET}
      - APP_ENV=${APP_ENV}
      - APP_URL=${APP_URL}
      - APP_USER=${APP_USER}
      - APP_PASSWORD=${APP_PASSWORD}
      - DOCKER_COMPOSE=true
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_FROM_EMAIL=${SMTP_FROM_EMAIL}
    networks:
      - bridge


  frontend:
    container_name: jiko-auth-frontend
    build: ./frontend
    restart: always
    environment:
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
    ports:
      - "3004:3000"
    networks:
      - bridge

networks:
  bridge:
    driver: bridge

volumes:
  postgres_data:
